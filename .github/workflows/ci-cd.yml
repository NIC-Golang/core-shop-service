name: CI/CD Pipeline

on: [push]

jobs:
    build-and-test:
        runs-on: ubuntu-latest
        steps:
            - name: Checkout repository
              uses: actions/checkout@v4
            
            - name: Generate .env
              run: |
                echo "POSTGRES_USER=${{ secrets.POSTGRES_USER }}" >> .env
                echo "POSTGRES_PASS=${{ secrets.POSTGRES_PASS }}" >> .env
                echo "POSTGRES_DB=${{ secrets.POSTGRES_DB }}" >> .env
                echo "IP=${{ secrets.IP }}" >> .env
                echo "IP_SQL=${{ secrets.IP_SQL }}" >> .env
                echo "CORE_SERVICE_PORT=${{ secrets.CORE_SERVICE_PORT }}" >> .env
                echo "PORT_SQL=${{ secrets.PORT_SQL }}" >> .env
            
            - name: Start database container
              run: docker compose --profile test -f docker-compose.test.yml up -d

            - name: Wait for PostgreSQL to be healthy
              run: |
                echo "Waiting for PostgreSQL to be ready..."
                until [ "$(docker inspect -f '{{.State.Health.Status}}' test_postgres)" == "healthy" ]; do
                  echo "Waiting..."
                  sleep 2
                done
                echo "PostgreSQL is ready!"

            - name: Set up Go
              uses: actions/setup-go@v4
              with:
                go-version: '1.23'

            - name: Install dependencies
              run: go mod tidy

            - name: Run tests
              run: go test ./tests/...

            - name: Stop and remove containers
              run: docker compose -f docker-compose.test.yml down

    build-and-push:
        needs: build-and-test
        runs-on: ubuntu-latest
        steps:
            
                
            - name: Checkout repository
              uses: actions/checkout@v4
            
            - name: Login to Docker Hub
              uses: docker/login-action@v3
              with:
                username: ${{ vars.DOCKERHUB_USERNAME }}
                password: ${{ secrets.DOCKERHUB_REPOS_TOKEN }}
      
            - name: Set up QEMU
              uses: docker/setup-qemu-action@v3
      
            - name: Set up Docker Buildx
              uses: docker/setup-buildx-action@v3

            - name: Build and push Core-Shop Service image
              uses: docker/build-push-action@v6
              with:
                context: .
                file: ./Dockerfile
                push: true
                tags: maxfiv/core-shop-service:latest
